{"version":3,"sources":["img/vue.png","components/Header/Header.js","components/Home/Home.js","components/Topic/Topic.js","components/User/User.js","components/Box/Box.js","components/CreateTopic/CreateTopic.js","components/Message/Message.js","components/Main/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","state","userInfo","token","messageCount","getMessageCount","localStorage","getItem","axios","get","then","res","setState","data","login","trim","post","accesstoken","console","log","setItem","id","success","props","history","push","catch","alert","logout","clear","this","prevProps","location","pathname","to","src","logo","alt","style","display","justifyContent","width","alignItems","avatar_url","loginname","onClick","onChange","event","target","value","type","Component","withRouter","Home","topics","currentPage","getTopics","page","limit","source","cancel","CancelToken","cancelToken","changePage","fromLocationGetType","search","includes","fromLocationGetPage","Number","match","getButtonText","topic","top","paginationTotal","tab","allNumber","find","item","indexOf","className","isActive","length","map","key","author","title","current","total","defaultPageSize","Topic","comment","textareaComment","setComment","newComment","up","reply_id","author_id","currenReply","replies","action","ups","filter","message","error","handleTextarea","addComment","topic_id","content","topicid","params","myEditor","txt","html","forEach","showTextarea","info","handleReply","newTopic","ele","replyReply","E","editor","customConfig","menus","onchange","create","create_at","dangerouslySetInnerHTML","__html","borderBottom","padding","height","color","htmlFor","ref","active","User","getUserInfo","username","flexDirection","score","githubUsername","collect_topics","recent_topics","recent_replies","Box","linkText","linkAddress","title1","children","CreateTopic","handleForm","stateName","submit","placeholder","Message","messageInfo","hasnot_read_messages","has_read_messages","reply","Main","exact","path","component","App","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.069b0860.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/vue.e1ea82cb.png\";","import React, { Component } from 'react'\r\nimport './header.css'\r\nimport axios from 'axios'\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport logo from '../../img/vue.png'\r\nclass Header extends Component {\r\n  state = {\r\n    userInfo: null,\r\n    token: '79b3b12e-9631-467b-9210-c68449c98a35',\r\n    messageCount: 0\r\n  }\r\n  componentDidMount () {\r\n    const token = localStorage.getItem('token')\r\n    if (token) {\r\n      axios.post('https://www.vue-js.com/api/v1/accesstoken', { accesstoken: token }).then(res => {\r\n        // console.log(res.data)\r\n        // 登陆成功之后存一个 token 到本地\r\n        localStorage.setItem('token', token)\r\n        localStorage.setItem('author_id', res.data.id)\r\n        delete res.data.success\r\n        this.setState({\r\n          userInfo: res.data\r\n        })\r\n      }).catch(() => {\r\n        // 写成 antd 的提示\r\n        alert('登录失败，密码不对')\r\n      })\r\n      // get /message/count 获取未读消息数\r\n      // 接收 get 参数\r\n      // accesstoken String\r\n      // axios.get(`https://www.vue-js.com/api/v1/message/count?accesstoken=${token}`).then(res => {\r\n      //   // console.log(res.data.data)\r\n      //   this.setState({\r\n      //     messageCount: res.data.data\r\n      //   })\r\n      // })\r\n      this.getMessageCount()\r\n    }\r\n  }\r\n  // 因为 header 组件一直会出现在页面中 所以每次切换地址栏的时候 cdu 都会执行\r\n  componentDidUpdate (prevProps) {\r\n    // 当你点击了未读消息进入到消息页面是时 默认将所有的未读消息变成了已读\r\n    // 就要更新未读消息数\r\n    // 什么时候更新\r\n    // 当页面地址改变时更新未读消息数 但是当前处于查看消息页面不更新\r\n    const token = localStorage.getItem('token')\r\n    if (this.props.location.pathname !== prevProps.location.pathname && this.props.location.pathname !== '/my/messages' && token) {\r\n      this.getMessageCount()\r\n    }\r\n  }\r\n  getMessageCount = () => {\r\n    const token = localStorage.getItem('token')\r\n    axios.get(`https://www.vue-js.com/api/v1/message/count?accesstoken=${token}`).then(res => {\r\n      // console.log(res.data.data)\r\n      this.setState({\r\n        messageCount: res.data.data\r\n      })\r\n    })\r\n  }\r\n  render () {\r\n    const { userInfo, token, messageCount } = this.state\r\n    return <header>\r\n      <Link to='/'><img src={logo} alt=\"\" /></Link>\r\n      {/* 因为这个网站登录不需要输入用户名和密码，只需要输入一个个人的 token 码向后台发送请求即可 */}\r\n      {\r\n        userInfo ? <div style={{ display: 'flex', justifyContent: 'space-between', width: '500px', alignItems: 'center' }}>\r\n          <img src={userInfo.avatar_url} alt=\"\" />\r\n          <span>{userInfo.loginname}</span>\r\n          <button onClick={this.logout}>登出</button>\r\n          <span>{messageCount ? messageCount : ''} <Link to='/my/messages'>未读消息</Link></span>\r\n          {this.props.location.pathname === '/topic/create' ? '' :\r\n            <button><Link to='/topic/create'>发布话题</Link></button>\r\n          }\r\n        </div>\r\n          :\r\n          <div>\r\n            <input onChange={(event) => this.setState({ token: event.target.value })} value={token} type=\"text\" />\r\n            <button onClick={this.login}>登录</button>\r\n          </div>\r\n      }\r\n    </header>\r\n  }\r\n  login = () => {\r\n    const { token } = this.state\r\n    if (token.trim()) {\r\n      // 发请求登录 \r\n      // 地址前缀 https://www.vue-js.com/api/v1/\r\n      // 参考 api   post /accesstoken 验证 accessToken 的正确性\r\n      axios.post('https://www.vue-js.com/api/v1/accesstoken', { accesstoken: token }).then(res => {\r\n        console.log(res.data)\r\n        // 登陆成功之后存一个 token 到本地\r\n        localStorage.setItem('token', token)\r\n        localStorage.setItem('author_id', res.data.id)\r\n        delete res.data.success\r\n        this.setState({\r\n          userInfo: res.data\r\n        })\r\n        this.props.history.push('/')\r\n      }).catch(() => {\r\n        // 写成 antd 的提示\r\n        alert('登录失败，密码不对')\r\n      })\r\n    }\r\n  }\r\n  logout = () => {\r\n    this.setState({\r\n      userInfo: null\r\n    })\r\n    localStorage.clear()\r\n    this.props.history.push('/')\r\n  }\r\n}\r\nexport default withRouter(Header)\r\n\r\n// 请求解释\r\n// 1. get /topics 主题首页\r\n// get   https://www.vue-js.com/api/v1/topics  获取首页的列表内容\r\n// 参数   https://www.vue-js.com/api/v1/topics?tab=all&page=1\r\n// page Number 页数\r\n// tab String 主题分类  all share wexx ask job good\r\n// limit Number 每一页的主题数量\r\n\r\n// 分页 设置的时候定义一个数组  [{tab: 'all',allNumber: 1000},{tab: 'share',allNumber: 200}] 生成对应页数的分页器\r\n// 不知道每一个类别的总数需要自己直接设置\r\n\r\n// 查看文章\r\n\r\n// 对文章发送评论\r\n// post /topic/:topic_id/replies 新建评论\r\n// 参数 \r\n// accesstoken String 用户的 accessToken\r\n// content String 评论的主体\r\n// 点赞(扩展)\r\n\r\n// 点击任意头像调到个人信息页\r\n// get /user/:loginname 用户详情","import React, { Component } from 'react'\r\nimport { NavLink, Link } from 'react-router-dom';\r\nimport { Pagination } from 'antd';\r\nimport './home.scss'\r\nimport axios from 'axios'\r\nclass Home extends Component {\r\n  state = {\r\n    topics: [],\r\n    currentPage: 1\r\n  }\r\n  componentDidMount () {\r\n    const type = this.fromLocationGetType()\r\n    //  ?tab=job&page=18    ===>  18\r\n    // match 方法  获取匹配到的子字符串\r\n    const currentPage = this.fromLocationGetPage()\r\n    this.setState({\r\n      currentPage\r\n    })\r\n    this.getTopics(type, currentPage)\r\n  }\r\n  // 获取 topics 列表 发送 get 请求 https://www.vue-js.com/api/v1/topics\r\n  // 某一个类别 某一页\r\n  // 根据地址栏的信息获取到 要展示的类别 (all share job ask ...)   判断地址栏是否存在某个类别\r\n  // 还要获取对应的页 (页数已经设置成了 state ) \r\n\r\n  // 什么时候需要发请求  \r\n  // 刚进页面的时候   第几页需要在地址栏获取地址栏没有就默认是第一页 \r\n  // 切换类别 默认第一页数据\r\n  // 分页器  \r\n  // 同一时间段可以发出了多个请求\r\n  // 但是当前最新的请求可能比较快，之前的请求比较慢，会导致页面先出现最新的内容而后就会被原来的内容覆盖(显示错误)\r\n  // 取消 axios 请求\r\n  componentDidUpdate (prevProps) {\r\n    const { search } = this.props.location\r\n    const oldsearch = prevProps.location.search\r\n    if (search !== oldsearch) {\r\n      const type = this.fromLocationGetType()\r\n      if (!search.includes('page')) {\r\n        // 点击了切换大类别并不是分页器\r\n        this.setState({\r\n          currentPage: 1\r\n        })\r\n        this.getTopics(type, 1)\r\n      } else {\r\n        // 点击了分页器\r\n        this.getTopics(type, this.fromLocationGetPage())\r\n      }\r\n    }\r\n  }\r\n  getTopics = (type = 'all', page = '1', limit = 20) => {\r\n    // 将 source 当成一个全局变量\r\n    // 上来就执行一次取消 axios 请求操作\r\n    if (this.source) {\r\n      console.log('取消 axios 请求')\r\n      this.source.cancel('Operation canceled by the user.');\r\n    }\r\n    const CancelToken = axios.CancelToken;\r\n    this.source = CancelToken.source();\r\n    // axios.get('/user/12345', {\r\n    //   cancelToken: source.token\r\n    // }).catch(function(thrown) {\r\n    //   if (axios.isCancel(thrown)) {\r\n    //     console.log('Request canceled', thrown.message);\r\n    //   } else {\r\n    //     // 处理错误\r\n    //   }\r\n    // });\r\n    // 取消请求（message 参数是可选的）\r\n    axios.get(`https://www.vue-js.com/api/v1/topics?tab=${type}&limit=${limit}&page=${page}`, {\r\n      cancelToken: this.source.token\r\n    }).then(res => {\r\n      // console.log(res.data.data)\r\n      this.setState({\r\n        topics: res.data.data\r\n      })\r\n    })\r\n  }\r\n  changePage = (page) => {\r\n    const type = this.fromLocationGetType()\r\n    // 更改页面地址 1. link   2. history 相关的方法\r\n    this.props.history.push(`?tab=${type}&page=${page}`)\r\n    this.setState({\r\n      currentPage: page\r\n    })\r\n  }\r\n  fromLocationGetType = () => {\r\n    const { search } = this.props.location\r\n    return search === '' ? 'all' : search.includes('all') ? 'all' : search.includes('share') ? 'share' : search.includes('weex') ? 'weex' : search.includes('good') ? 'good' : search.includes('job') ? 'job' : 'ask'\r\n  }\r\n  fromLocationGetPage = () => {\r\n    const { search } = this.props.location\r\n    return search.includes('page') ? Number(search.match(/[0-9]{1,2}/)[0]) : 1\r\n  }\r\n  // 全部类别展示所有类别按钮  其他类别只展示精华或者置顶类别按钮\r\n  getButtonText = topic => topic.top ? '置顶' : ''\r\n  render () {\r\n    // [{tab: 'all',allNumber: 1000},{tab: 'share',allNumber: 200}]\r\n    const { search } = this.props.location\r\n    const { topics, currentPage } = this.state\r\n    const paginationArr = [\r\n      { tab: 'all', allNumber: 1015 },\r\n      { tab: 'good', allNumber: 15 },\r\n      { tab: 'share', allNumber: 350 },\r\n      { tab: 'weex', allNumber: 3 },\r\n      { tab: 'job', allNumber: 39 },\r\n      { tab: 'ask', allNumber: 623 }\r\n    ]\r\n    const paginationTotal = paginationArr.find(item => search === '' ? item.tab === 'all' : search.indexOf(item.tab) > -1).allNumber\r\n    return <div className='home'>\r\n      <div className=\"nav\">\r\n        <ul>\r\n          <li><NavLink isActive={() => search.includes('all') || search === ''} to='/?tab=all'>全部</NavLink></li>\r\n          <li><NavLink isActive={() => search.includes('good')} to='/?tab=good'>精华</NavLink></li>\r\n          <li><NavLink isActive={() => search.includes('weex')} to='/?tab=weex'>weex</NavLink></li>\r\n          <li><NavLink isActive={() => search.includes('share')} to='/?tab=share'>分享</NavLink></li>\r\n          <li><NavLink isActive={() => search.includes('ask')} to='/?tab=ask'>问答</NavLink></li>\r\n          <li><NavLink isActive={() => search.includes('job')} to='/?tab=job'>招聘</NavLink></li>\r\n        </ul>\r\n      </div>\r\n      <hr />\r\n      <div className='topic-list'>\r\n        {\r\n          topics.length ? <div>\r\n            <ul>\r\n              {\r\n                topics.map(item => <li key={item.id}> <Link to={`/user/${item.author.loginname}`}><img src={item.author.avatar_url} alt=\"\" /></Link> <span>{this.getButtonText(item)}</span><Link to={`/topic/${item.id}`}>{item.title}</Link></li>)\r\n              }\r\n            </ul>\r\n            <Pagination onChange={this.changePage} current={currentPage} total={paginationTotal} defaultPageSize={20} />\r\n          </div> : '请稍等'\r\n        }\r\n\r\n      </div>\r\n    </div>\r\n  }\r\n}\r\nexport default Home","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport { Skeleton, message } from 'antd';\r\nimport E from 'wangeditor'\r\nimport { Link } from 'react-router-dom';\r\nclass Topic extends Component {\r\n  state = {\r\n    topic: null,\r\n    comment: '',\r\n    textareaComment: ''\r\n  }\r\n  componentDidMount () {\r\n    // console.log(this.props)\r\n    const { topicid } = this.props.match.params\r\n    const token = localStorage.getItem('token')\r\n    axios.get(`https://www.vue-js.com/api/v1/topic/${topicid}`).then(res => {\r\n      const topic = res.data.data\r\n      topic.replies.forEach(item => {\r\n        item.showTextarea = false\r\n      })\r\n      // console.log(topic)\r\n      this.setState({\r\n        topic: topic\r\n      })\r\n      if (token) {\r\n        // 将该编辑器定义成了组件内的全局变量\r\n        // 组件的任何地方都可以访问\r\n        this.myEditor = new E(this.editor)\r\n        this.myEditor.customConfig.menus = [\r\n          'head',\r\n          'bold',\r\n          'italic',\r\n          'underline'\r\n        ]\r\n        this.myEditor.customConfig.onchange = html => {\r\n          // console.log(html)\r\n          // 输入的评论内容 html 需要让点击事件获取到并且发送添加请求\r\n          // 1. 做成 state \r\n          // 2. 做成全局变量  this.xxx = html \r\n          this.setComment(html)\r\n        }\r\n        this.myEditor.create()\r\n        // new E('#editor')    #editor 是代表一个原生的dom元素\r\n      }\r\n    })\r\n  }\r\n  setComment = newComment => {\r\n    this.setState({\r\n      comment: newComment\r\n    })\r\n  }\r\n  up = reply_id => {\r\n    // post /reply/:reply_id/ups 为评论点赞\r\n    // console.log(reply_id)\r\n    const token = localStorage.getItem('token')\r\n    if (token) {\r\n      axios.post(`https://www.vue-js.com/api/v1/reply/${reply_id}/ups`, { accesstoken: token }).then(res => {\r\n        // console.log(res.data)\r\n        // 更新本地的数据 state\r\n        // 1. 直接操作 state\r\n        // 2. 发一个新的请求获取新的 topic\r\n        const author_id = localStorage.getItem('author_id')\r\n        const topic = { ...this.state.topic }\r\n        const currenReply = topic.replies.find(item => item.id === reply_id)\r\n        if (res.data.action === 'up') {\r\n          // 需要修改某个评论的 ups 数组\r\n          currenReply.ups.push(author_id)\r\n        } else {\r\n          currenReply.ups = currenReply.ups.filter(item => item !== author_id)\r\n        }\r\n        // console.log(topic)\r\n        this.setState({\r\n          topic: topic\r\n        })\r\n      })\r\n    } else {\r\n      message.error('请先登录');\r\n    }\r\n  }\r\n  handleTextarea = event => {\r\n    this.setState({\r\n      comment: event.target.value\r\n    })\r\n  }\r\n  addComment = () => {\r\n    // post /topic/:topic_id/replies 新建评论\r\n    // 接收 post 参数\r\n    // accesstoken String 用户的 accessToken\r\n    // content String 评论的主体\r\n    const { topic, comment } = this.state\r\n    console.log(comment)\r\n    if (comment.trim()) {\r\n      const token = localStorage.getItem('token')\r\n      const topic_id = topic.id\r\n      axios.post(`https://www.vue-js.com/api/v1/topic/${topic_id}/replies`, { accesstoken: token, content: comment }).then(res => {\r\n        // 更新本地的评论\r\n        // 1. 做一个假的 reply 添加到 replies 中\r\n        // 比如原来的评论 {id:,ups:,author:,create_at,content: }       {is: ,content,ups}\r\n        // 2. 直接将新的整个文章数据请求回来\r\n        // console.log(res.data)\r\n        const { topicid } = this.props.match.params\r\n        this.setState({\r\n          comment: ''\r\n        })\r\n        this.myEditor.txt.html('')\r\n        // 让组件刷新一下，或者整个页面刷新一下\r\n        axios.get(`https://www.vue-js.com/api/v1/topic/${topicid}`).then(res => {\r\n          // console.log(res.data.data)\r\n          const topic = res.data.data\r\n          topic.replies.forEach(item => {\r\n            item.showTextarea = false\r\n          })\r\n          this.setState({\r\n            topic: res.data.data\r\n          })\r\n        })\r\n      })\r\n    } else {\r\n      message.info('请输入有效内容')\r\n    }\r\n  }\r\n  // 点击评论的回复按钮 显示评论框和默认的评论内容\r\n  // 差个获得焦点\r\n  handleReply = ({ id, author }) => {\r\n    // 出现对应的 textArea 修改 topic\r\n    // 输如框的内容加上评论的 @作者名   修改 textareaComment\r\n\r\n    const { topic } = this.state\r\n    const newTopic = { ...topic }\r\n    newTopic.replies.forEach(ele => {\r\n      if (ele.id === id) {\r\n        ele.showTextarea = !ele.showTextarea\r\n      } else {\r\n        ele.showTextarea = false\r\n      }\r\n    });\r\n    this.setState({\r\n      topic: newTopic,\r\n      textareaComment: `@${author.loginname} `\r\n    })\r\n  }\r\n  replyReply = id => {\r\n    // post /topic/:topic_id/replies 新建评论\r\n    // 接收 post 参数\r\n\r\n    // accesstoken String 用户的 accessToken\r\n    // content String 评论的主体\r\n    // reply_id String 如果这个评论是对另一个评论的回复，请务必带上此字段。这样前端就可以构建出评论线索图。\r\n    const { textareaComment, topic } = this.state\r\n    const topic_id = topic.id\r\n    if (textareaComment.trim()) {\r\n      const token = localStorage.getItem('token')\r\n      axios.post(`https://www.vue-js.com/api/v1/topic/${topic_id}/replies`, { accesstoken: token, content: textareaComment, reply_id: id }).then(res => {\r\n        // 重新发一遍获取文章详情的请求\r\n        axios.get(`https://www.vue-js.com/api/v1/topic/${topic_id}`).then(res => {\r\n          console.log(res.data.data)\r\n          const topic = res.data.data\r\n          topic.replies.forEach(item => {\r\n            item.showTextarea = false\r\n          })\r\n          this.setState({\r\n            topic: res.data.data,\r\n            textareaComment: ''\r\n          })\r\n        })\r\n      })\r\n    }\r\n  }\r\n\r\n  render () {\r\n    const { topic, textareaComment } = this.state\r\n    const token = localStorage.getItem('token')\r\n    const author_id = localStorage.getItem('author_id')\r\n    return topic ? <div className='topic'>\r\n      <div className=\"topic-header\">\r\n        <div className='header-top'>\r\n          <span>置顶</span>\r\n          <h2>{topic.title}</h2>\r\n        </div>\r\n        <div className='header-bottom'><span>发布于·{topic.create_at}</span><span>作者 · <Link to={`/user/${topic.author.loginname}`}>{topic.author.loginname}</Link> </span></div>\r\n      </div>\r\n      <hr />\r\n      {/* 文章详情的样式  所有文章的内容的 class 名都是固定的，而且小标题段落图片的样式全部都是一样的 */}\r\n      <div className='topic-content' dangerouslySetInnerHTML={{ __html: topic.content }}></div>\r\n      <div className=\"comment-box\">\r\n        <ul>\r\n          {topic.replies.map(item => <li id={item.id} style={{ borderBottom: '1px solid #ccc', padding: '10px', width: '80%' }} key={item.id}><div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n\r\n            <div>\r\n              <Link to={`/user/${item.author.loginname}`}><img style={{ width: '40px', height: '40px' }} src={item.author.avatar_url} alt=\"\" /></Link>\r\n              <div>\r\n                <Link to={`/user/${item.author.loginname}`}><span>{item.author.loginname}</span></Link>\r\n                <div dangerouslySetInnerHTML={{ __html: item.content }}></div>\r\n              </div>\r\n            </div>\r\n            {/* 登录和不登录*/}\r\n            {/* 回复按钮存在或不存在  */}\r\n            {/* 不登录点赞按钮颜色不变化 登陆之后点赞按钮颜色根据用户 id 和 item.ups 比较*/}\r\n            <div><button onClick={() => this.up(item.id)} style={{ color: item.ups.includes(author_id) ? 'red' : '#000' }}>点赞</button><span>{item.ups.length}</span>{token ? <button onClick={() => this.handleReply(item)}> <label htmlFor={item.id}>回复</label> </button> : ''}</div>\r\n          </div>\r\n            {\r\n              item.showTextarea ? <div>\r\n                <textarea id={item.id} onChange={(event) => this.setState({\r\n                  textareaComment: event.target.value\r\n                })} value={textareaComment} ></textarea> <button onClick={() => this.replyReply(item.id)}>回复</button>\r\n              </div> : ''\r\n            }\r\n          </li>)}\r\n        </ul>\r\n        {\r\n          token ? <div>\r\n            <h3>添加回复</h3>\r\n            <div ref={editor => this.editor = editor} id=\"editor\">\r\n            </div>\r\n            <button onClick={this.addComment}>回复</button>\r\n          </div> : ''\r\n        }\r\n\r\n      </div>\r\n    </div> : <Skeleton active />\r\n  }\r\n}\r\nexport default Topic","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom';\r\nclass User extends Component {\r\n  state = {\r\n    userInfo: null\r\n  }\r\n  componentDidMount () {\r\n    // get /user/:loginname 用户详情\r\n    // 示例：/api/v1/user/DongHongfei\r\n    // console.log(this.props.match.params)\r\n    console.log('不在用户页切换到用户才会执行')\r\n    const username = this.props.match.params.username\r\n    this.getUserInfo(username)\r\n  }\r\n  componentDidUpdate (prevProps) {\r\n    // 组件更新了就触发  props 或者 state 发生改变\r\n    // 因为该组件是页面(路由)组件 默认会接收路由的 props，当页面地址改变时，也就是 props 发生了改变\r\n    // 在此处想要修改 state 的话必须加判断 否则会无限循环\r\n    // console.log(this.props.location)\r\n    if (this.props.location.pathname !== prevProps.location.pathname) {\r\n      console.log('在用户页切换用户才会执行')\r\n      const username = this.props.match.params.username\r\n      this.getUserInfo(username)\r\n    }\r\n  }\r\n  getUserInfo = username => {\r\n    axios.get(`https://www.vue-js.com/api/v1/user/${username}`).then(res => {\r\n      // console.log(res.data.data)\r\n      this.setState({\r\n        userInfo: res.data.data\r\n      })\r\n    })\r\n  }\r\n  render () {\r\n    const { userInfo } = this.state\r\n    return <div className='user-wrap'>\r\n      {\r\n        userInfo ? <div>\r\n          <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n            <img style={{ width: '40px' }} src={userInfo.avatar_url} alt=\"\" />\r\n            <span>{userInfo.loginname}</span>\r\n            <span>积分 {userInfo.score}</span>\r\n            {userInfo.githubUsername ? <span>github {userInfo.githubUsername}</span> : ''}\r\n            {userInfo.collect_topics.length ? <span>{userInfo.collect_topics.length} 话题收藏</span> : ''}\r\n            <span>创建于 {userInfo.create_at}</span>\r\n          </div>\r\n          <hr />\r\n          <div>\r\n            <h4>最近创建的话题</h4>\r\n            {\r\n              userInfo.recent_topics.length ? <ul>\r\n                {\r\n                  userInfo.recent_topics.map(item => <li key={item.id}> <Link to={`/user/${item.author.loginname}`}><img src={item.author.avatar_url} alt=\"\" /></Link> <Link to={`/topic/${item.id}`}>{item.title}</Link></li>)\r\n                }\r\n              </ul> : <span>无话题</span>\r\n            }\r\n\r\n          </div>\r\n          <hr />\r\n          <div>\r\n            <h4>最近参与的话题</h4>\r\n            {\r\n              userInfo.recent_replies.length ? <ul>\r\n                {\r\n                  userInfo.recent_replies.map(item => <li key={item.id}> <Link to={`/user/${item.author.loginname}`}><img src={item.author.avatar_url} alt=\"\" /></Link> <Link to={`/topic/${item.id}`}>{item.title}</Link></li>)\r\n                }\r\n              </ul> : <span>无话题</span>\r\n            }\r\n          </div>\r\n        </div> : <div>请稍等</div>\r\n      }\r\n    </div>\r\n  }\r\n}\r\nexport default User","import React from 'react'\r\nimport './box.css'\r\nimport { Link } from 'react-router-dom'\r\n// 如何接收两个 children  或者 传递带名字的 children \r\nconst Box = (props) => <div className='box'>\r\n  <div className=\"box-header\">\r\n    {props.linkText ? <span> <Link to={props.linkAddress}>{props.linkText}</Link><span>/</span> {props.title1} </span> : ''}<span>{props.title}</span>\r\n  </div>\r\n  <div className=\"box-content\">\r\n    {props.children}\r\n  </div>\r\n</div>\r\nexport default Box","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios'\r\nimport Box from '../Box/Box'\r\nclass CreateTopic extends Component {\r\n  state = {\r\n    tab: '',\r\n    title: '',\r\n    content: ''\r\n  }\r\n  render () {\r\n    const { tab, title, content } = this.state\r\n    return <Box title='发布话题' linkText='主页' linkAddress='/' title1={<span>哈哈哈</span>}>\r\n      <div className='create-topic'>\r\n        <span>选择板块:</span>\r\n        <select value={tab} onChange={event => this.handleForm(event, 'tab')}>\r\n          <option value=\"\">请选择</option>\r\n          <option value=\"share\">分享</option>\r\n          <option value=\"ask\">问答</option>\r\n          <option value=\"job\">招聘</option>\r\n        </select>\r\n        {/* 打开另外一个网页依然是自己的页面  */}\r\n        {tab === 'job' ? <span>为避免被管理员删帖，发帖时请好好阅读 <Link to='/topic/541ed2d05e28155f24676a12'>《招聘帖规范》</Link></span> : ''}\r\n        <br />\r\n        <input onChange={event => this.handleForm(event, 'title')} value={title} type=\"text\" placeholder='标题字数 10 字以上' />\r\n        <br />\r\n        <textarea value={content} onChange={event => this.handleForm(event, 'content')}></textarea>\r\n        <button onClick={this.submit}>提交</button>\r\n      </div>\r\n    </Box>\r\n  }\r\n  handleForm = (event, stateName) => {\r\n    this.setState({\r\n      [stateName]: event.target.value\r\n    })\r\n  }\r\n  submit = () => {\r\n    const { tab, title, content } = this.state\r\n    const token = localStorage.getItem('token')\r\n    if (tab && title.length >= 10 && content) {\r\n      // post /topics 新建主题\r\n      // 接收 post 参数\r\n      // title String 标题\r\n      // tab String 目前有 ask share job\r\n      // content String 主体内容\r\n      axios.post(`https://www.vue-js.com/api/v1/topics`, { tab, title, content, accesstoken: token }).then(res => {\r\n        // console.log(res.data)\r\n        this.props.history.push(`/topic/${res.data.topic_id}`)\r\n      })\r\n    }\r\n  }\r\n\r\n}\r\nexport default CreateTopic","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nclass Message extends Component {\r\n  state = {\r\n    messageInfo: null\r\n  }\r\n  componentDidMount () {\r\n    // get /messages 获取已读和未读消息\r\n    // 接收 get 参数\r\n    // accesstoken String\r\n    const token = localStorage.getItem('token')\r\n    axios.get(`https://www.vue-js.com/api/v1/messages?accesstoken=${token}`).then(res => {\r\n      console.log(res.data.data)\r\n      this.setState({\r\n        messageInfo: res.data.data\r\n      })\r\n      // 当进入到消息页的时候将所有的未读标记成已读\r\n      // 当有未读消息的时候才会去标记成已读\r\n      if (res.data.data.hasnot_read_messages.length > 0) {\r\n        axios.post(`https://www.vue-js.com/api/v1/message/mark_all`, { accesstoken: token }).then(res => {\r\n          // console.log(res)\r\n        })\r\n      }\r\n    })\r\n  }\r\n  render () {\r\n    const { messageInfo } = this.state\r\n    return messageInfo ? <div className='message-box'>\r\n      <div></div>\r\n      <div>\r\n        <h4>过往消息</h4>\r\n        {/* zhaoweibing 在话题 推荐一个优秀的语音答题社区 中@了你 */}\r\n        <ul>\r\n          {messageInfo.has_read_messages.map(item => <li key={item.id}> <Link to={`/user/${item.author.loginname}`}>{item.author.loginname}</Link>在话题 <Link to={`/topic/${item.topic.id}#${item.reply.id}`}>{item.topic.title}</Link> 中 {item.type === 'at' ? '@' : '回复'}了你  </li>)}\r\n        </ul>\r\n      </div>\r\n    </div> : <div>稍等</div>\r\n  }\r\n}\r\nexport default Message","import React from 'react'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport Home from '../Home/Home'\r\nimport Topic from '../Topic/Topic'\r\nimport User from '../User/User'\r\nimport CreateTopic from '../CreateTopic/CreateTopic'\r\nimport Message from '../Message/Message'\r\nconst Main = (props) => <Switch>\r\n  <Route exact path='/' component={Home} />\r\n  <Route path='/topic/create' component={CreateTopic} />\r\n  <Route path='/topic/:topicid' component={Topic} />\r\n  <Route path='/user/:username' component={User} />\r\n  <Route path='/my/messages' component={Message} />\r\n</Switch>\r\nexport default Main","import React from 'react';\r\nimport Header from './components/Header/Header';\r\nimport Main from './components/Main/Main';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\n\r\n// HashRouter    BrowserRouter   \r\n// 地址栏展示不同前者带 # \r\nfunction App () {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Header />\r\n        <Main />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}